"use client"

import { Dialog, DialogContent, DialogHeader, DialogTitle } from "@/components/ui/dialog"
import { Button } from "@/components/ui/button"
import { useState } from "react"

type ProcrastinationOverlayProps = {
  onClose: () => void
}

export function ProcrastinationOverlay({ onClose }: ProcrastinationOverlayProps) {
  const [open, setOpen] = useState(true)
  const [content, setContent] = useState<number>(Math.floor(Math.random() * 4))

  const handleClose = () => {
    setOpen(false)
    onClose()
  }

  const renderContent = () => {
    switch (content) {
      case 0:
        return (
          <div className="flex flex-col items-center">
            <img src="/placeholder.svg?height=200&width=400" alt="Nyan Cat" className="mb-4 rounded-lg" />
            <h3 className="text-xl font-bold mb-2">–í—Ä–µ–º—è –º–µ–º–æ–≤!</h3>
            <p className="text-center mb-4">–í–∞—à –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –ø—Ä–æ–∫—Ä–∞—Å—Ç–∏–Ω–∞—Ç–æ—Ä —Ç—Ä–µ–±—É–µ—Ç —Å—Ä–æ—á–Ω–æ–π –¥–æ–∑—ã –º–µ–º–æ–≤.</p>
          </div>
        )
      case 1:
        return (
          <div className="flex flex-col items-center">
            <div className="bg-blue-500 text-white p-8 rounded-lg mb-4 w-full max-w-md">
              <h3 className="text-xl font-bold mb-2">:(</h3>
              <p className="mb-4">–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ª–µ–Ω–∏.</p>
              <p className="mb-4">–°–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ—Ç–∏–∫–æ–≤.</p>
              <p className="text-sm">–ö–æ–¥ –æ—à–∏–±–∫–∏: PR0CR4ST1N4T10N</p>
            </div>
          </div>
        )
      case 2:
        return (
          <div className="flex flex-col items-center">
            <div className="border border-red-500 bg-red-100 text-red-800 p-6 rounded-lg mb-4 w-full">
              <h3 className="text-xl font-bold mb-2">‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï! ‚ö†Ô∏è</h3>
              <p className="mb-2">–û–±–Ω–∞—Ä—É–∂–µ–Ω –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏!</p>
              <p>–°—Ä–æ—á–Ω–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–≤–ª–µ—á—å—Å—è –Ω–∞ —á—Ç–æ-–Ω–∏–±—É–¥—å –±–µ—Å–ø–æ–ª–µ–∑–Ω–æ–µ.</p>
            </div>
          </div>
        )
      case 3:
      default:
        return (
          <div className="flex flex-col items-center">
            <div className="p-6 border rounded-lg mb-4 w-full text-center">
              <h3 className="text-xl font-bold mb-4">–£—à–µ–ª —Å–º–æ—Ç—Ä–µ—Ç—å –º–µ–º—ã</h3>
              <p className="text-4xl mb-4">üèùÔ∏è üèñÔ∏è üòé</p>
              <p className="italic">–í–µ—Ä–Ω—É—Å—å –Ω–∏–∫–æ–≥–¥–∞</p>
            </div>
          </div>
        )
    }
  }

  return (
    <Dialog open={open} onOpenChange={handleClose}>
      <DialogContent className="sm:max-w-md">
        <DialogHeader>
          <DialogTitle>–†–µ–∂–∏–º –ü—Ä–æ–∫—Ä–∞—Å—Ç–∏–Ω–∞—Ü–∏–∏ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!</DialogTitle>
        </DialogHeader>
        {renderContent()}
        <div className="flex justify-between">
          <Button variant="outline" onClick={() => setContent((content + 1) % 4)}>
            –ï—â–µ –æ—Ç–≤–ª–µ—á–µ–Ω–∏–µ
          </Button>
          <Button onClick={handleClose}>–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Ä–∞–±–æ—Ç–µ (–∑–∞—á–µ–º?)</Button>
        </div>
      </DialogContent>
    </Dialog>
  )
}

